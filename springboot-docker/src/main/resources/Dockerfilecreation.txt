FROM  eclipse-temurin:17
# to define parent img,we need to use FROM tag

LABEL meintainer = "priyankareddynomula111@gmail.com"
#to define meta data

WORKDIR /app
# whenever we run the container ,APP directory will be created in container

COPY  target/springboot-docker-0.0.1-SNAPSHOT.jar /app/springboot-docker-demo.jar
# source(Our local) and destination(container)

ENTRYPOINT ["java", "-jar", "springboot-docker-demo.jar"]
# to start the jar file

# we have to use this docker file to build docker img
#open terminal go to  docker file location and execute docker build commands

 1)open the docker file location in terminal
     2)cd springboot-docker(application)
     3) docker build -t springboot-docker . // to build docker image,-t for tag , . represents current working directory
     4)docker images // lists all  available images in machines with all info like(tag-version),size,creation time
     5)docker build -t springboot-docker:0.1.RELEASE . // to change tag info
     6)docker images // to check the images

************************************

# how to run the docker img in docker container
1)docker images
2)docker run -p 8009:8008 springboot-docker
docker run -p 8009 (host operating system):8008(application port number  ,container port,it will contain its own private network) springboot-docker(img name) // -p we need to map container port with  host operator port
// by using this exposed port , we can access private network

check by running localhost:8009/docker->it will mapped
ctrl+c->this will stop docker container

3) docker ps // to check running containers

4)//how to run docker container in detached mode ( background)
docker run -p 8009:8008 -d springboot-docker

output in terminal:3375cc6feadb0738f695a71bf85dd229b91832d48e5886a2acfc30a537015928

5) docker logs -f 3375 //to see docker logs,-f to tail the logs

6)docker ps // to check whether container is running or not
7)  docker stop 3375 //to stop docker container

*****************

---How to push docker img(from local machine to docker hub)
->sign in to docker hub
->in docker hub (docker registry)->where docker images are stored as repositorys
->to push docker imgs to docker hub

commands:
1)docker login  //(provide username and password of docker hub)
2) docker tag springboot-docker priyankanomula/springboot-docker:0.1.RELEASE  ->(0.1 .release IT IS A TAG NAME)/// (to push img local to docker hub),first we need to associate local image with repository of docker hub
3)docker images(dockerid/repository name)
output :priyankanomula/springboot-docker   0.1.RELEASE   c327abf4de44   3 hours ago   423MB
4)now we are good to push this img to docker hub
5)docker push priyankanomula/springboot-docker:0.1.RELEASE
check in docker hub

*********************************
How to run docker image in a docker container
->we can pull docker image and depoly in different environments(test,staging)
->we can pull docker img from docker hub and run docker img in docker container

commands:
1)docker pull priyankanomula/springboot-docker:0.1.RELEASE
2)docker images
//already existed in local machine
//priyankanomula/springboot-docker   0.1.RELEASE   c327abf4de44   3 hours ago   423MB


// try to pull new img from docker hub eg:mysql
-> go to docker hub search for mysql and find the latest tag
3)docker pull mysql:oraclelinux9  //(tag name)
//if we don't mention any tag,it will take default as latest
4)docker images
// mysql  img will list in local machine

---How to run mysql docker image in docker container
1)docker run -p 3307:3306 --name localhost -e MYSQL_ROOT_PASSWORD=TCS1235@# -e MYSQL_DATABASE=employee_db -e MYSQL_USER=Reddy -e MYSQL_PASSWORD=Reddy -d mysql:latest

// running the above img in detached mode


->docker run -p 3307:3306(default container port for mysql)

output:
//Status: Downloaded newer image for mysql:latest
  0eaff927c116f8874c72908c400c6170777cc6c1bb60c81b95c2184a00c11a2c

 2)docker logs -f localhost // localhost is container name,we can see logs of mysql db
 -> to check whether mysql is running in docker container or not
 ->we need to login(access) to mysql db in docker container

 ctrl+c


  3)docker exec -it localhost bash

  ->it will jump to bash terminal
  4)mysql -u root -p
  enter password:TCS1235@#

  show databases
  // we have successfully deployed mysql docker img in a docker container
  downloaded latest mysql image and created employee_db successfully














