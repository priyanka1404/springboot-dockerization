FROM  eclipse-temurin:17
# to define parent img,we need to use FROM tag

LABEL meintainer = "priyankareddynomula111@gmail.com"
#to define meta data

WORKDIR /app
# whenever we run the container ,APP directory will be created in container

COPY  target/springboot-docker-0.0.1-SNAPSHOT.jar /app/springboot-docker-demo.jar
# source(Our local) and destination(container)

ENTRYPOINT ["java", "-jar", "springboot-docker-demo.jar"]
# to start the jar file

# we have to use this docker file to build docker img
#open terminal go to  docker file location and execute docker build commands


1)open the docker file location in terminal
2)cd springboot-docker(application)
3) docker build -t springboot-docker . // to build docker image,-t for tag
4)docker images // lists all  available images in machines with all info like(tag-version),size,creation time
5)docker build -t springboot-docker:0.1.RELEASE . // to change tag info
6)docker images // to check the images

************************************

# how to run the docker img in docker container
1)docker images
2)docker run -p 8009:8008 springboot-docker
docker run -p 8009 (host operating system):8008(application port number  ,container port,it will contain its own private network) springboot-docker(img name) // -p we need to map container port with  host operator port
// by using this exposed port , we can access private network

check by running localhost:8009/docker->it will mapped
ctrl+c->this will stop docker container

3) docker ps // to check running containers

4)//how to run docker container in detached mode ( background)
docker run -p 8009:8008 -d springboot-docker

output in terminal:3375cc6feadb0738f695a71bf85dd229b91832d48e5886a2acfc30a537015928

5) docker logs -f 3375 //to see docker logs,-f to tail the logs

6)docker ps
7)  docker stop 3375 //to stop docker container

*****************

---How to push docker img(from local machine to docker hub)
->sign in to docker hub
->in docker hub (docker registry)->where docker images are stored as repositorys
->to push docker imgs to docker hub

commands:
1)docker login  //(provide username and password of docker hub)
2) docker tag springboot-docker priyankanomula/springboot-docker:0.1.RELEASE  ->(0.1 .release IT IS A TAG NAME)/// (to push img local to docker hub),first we need to associate local image with repository of docker hub
3)docker images(dockerid/repository name)
output :priyankanomula/springboot-docker   0.1.RELEASE   c327abf4de44   3 hours ago   423MB
4)now we are good to push this img to docker hub
5)docker push priyankanomula/springboot-docker:0.1.RELEASE
check in docker hub










